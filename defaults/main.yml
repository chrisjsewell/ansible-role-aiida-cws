# in this file add variables to be used in the tasks

# general
aiida_root_user: root
aiida_release_notes: "${HOME}/aiida_release_notes.ini"
# aiida_timezone_name: Europe/Zurich
aiida_temp_folder: /tmp
aiida_data_folder_temp: "${HOME}/.local/share/aiida"
aiida_apt_packages:
- vim    # required for manual verdi code/computer setup
- ssh    # required by MPI
- git    # useful for cloning repositories
- python3-pkg-resources    # required by the pip ansible module

# postgresql install
aiida_postgres_user: postgres
# postgresql database
aiida_postgres_host: localhost
aiida_postgres_port: 5432
aiida_postgres_db: aiidadb
aiida_postgres_db_pw: "ne9N_LDK-*JSS"
aiida_postgres_db_user: aiida

# conda base install
conda_folder_temp: "${HOME}/.conda"
conda_exec_temp: "{{ conda_folder_temp }}/bin/mamba"
conda_installer_sh: "{{ aiida_temp_folder }}/conda_installer.sh"
conda_installer_url: https://github.com/conda-forge/miniforge/releases/download/4.12.0-2/Mambaforge-4.12.0-2-Linux-x86_64.sh
conda_installer_checksum: sha256:8cb16ef82fe18d466850abb873c7966090b0fbdcf1e80842038e0b4e6d8f0b66
conda_installer_timeout: 300  # seconds
conda_base_packages: []
# additional envs to create
conda_add_envs: []
# this env could replace the tools installed in simulationbase,
# however, it adds >1Gb of disk space to the VM,
# and misses xmgrace, xcrysden
# - name: tools
#   packages:
#   - jmol
#   - gnuplot
#   - cif2cell

# aiida conda env
aiida_conda_env: "aiida"
aiida_conda_python_version: "3.8"
aiida_conda_core_version: "1.6"
aiida_conda_core_version_major: "{{ (aiida_conda_core_version|string).split('.')[0] }}"
aiida_conda_add_packages:
- ipykernel
- jupyterlab=3
- jupyterlab-lsp
- jupyter-lsp-python
- jupyterlab-spellchecker
- aiida-core.rest
- aiida-core.notebook
- aiida-pseudo
- aiida_conda_scheduler
- aiida-bigdft=0.2.6
- aiida-castep=1.3.0
- aiida-gaussian=1.4.3
- aiida-orca=0.5.1
- aiida-vasp=2.1.1
- aiida-wannier90_workflows=1.0.2
- mendeleev<0.10.0  # for aiida-fleur 1.3.1, only when using aiida 1.6 -> sqlalchemy != 1.4
# abipy is required by aiida-abinit but is not listed as a dependency in v0.2.0,
# also the abipy recipe does not pin dependencies, so we have to do it specifically
- abipy=0.8  # we can't use 0.9 because the pymatgen version is incomatible with aiida-common-workflows
- pymatgen<2021.3.3  # required by abipy 0.8
- apscheduler=2.1.0  # required by abipy 0.8, note this is sourced from the cjs14 channel

# these are requirements which are not yet on conda
# we use --no-deps though, so that we don't clobber any conda packages
aiida_conda_pip_packages:
- git+https://github.com/aiidateam/aiida-common-workflows.git@db0f1ae125e045183f69cd42d09f58fd69c2bff8

# aiida profile
aiida_profile_name: generic
aiida_profile_first_name: Max
aiida_profile_last_name: Scientist
aiida_profile_institution: Quantum Mobile
aiida_profile_email: aiida@localhost
aiida_database_backend: "{{ 'django' if aiida_conda_core_version_major|int < 2 else 'psql_dos' }}"

# aiida computers
aiida_computer_defaults:
  hostname: localhost
  run_folder: "${HOME}/.aiida_run"
  mpi_cmd: "mpirun -np {tot_num_mpiprocs}"
  default_mpiprocs: 2
  configure: "--safe-interval 0"
aiida_computers:
- label: local_direct
  scheduler: "{{ 'direct' if aiida_conda_core_version_major|int < 2 else 'core.direct' }}"
  transport: "{{ 'local' if aiida_conda_core_version_major|int < 2 else 'core.local' }}"
- label: local_direct_conda
  scheduler: conda.direct
  transport: "{{ 'local' if aiida_conda_core_version_major|int < 2 else 'core.local' }}"
- label: local_slurm
  scheduler: "{{ 'slurm' if aiida_conda_core_version_major|int < 2 else 'core.slurm' }}"
  transport: "{{ 'local' if aiida_conda_core_version_major|int < 2 else 'core.local' }}"
- label: local_slurm_conda
  scheduler: conda.slurm
  transport: "{{ 'local' if aiida_conda_core_version_major|int < 2 else 'core.local' }}"

aiida_pseudos_sssp:
- version: "1.1"
  functional: PBE
  protocol: efficiency
- version: "1.1"
  functional: PBE
  protocol: precision

aiida_pseudos_dojo:
# used by https://github.com/aiidateam/aiida-common-workflows/blob/db0f1ae125e045183f69cd42d09f58fd69c2bff8/aiida_common_workflows/workflows/relax/siesta/protocol.yml
- version: "0.4"
  functional: PBE
  relativistic: FR
  protocol: standard
  pseudo_format: psml
# used by https://github.com/aiidateam/aiida-common-workflows/blob/db0f1ae125e045183f69cd42d09f58fd69c2bff8/aiida_common_workflows/workflows/relax/abinit/protocol.yml
- version: "1.0"
  functional: PBE
  relativistic: SR
  protocol: standard
  pseudo_format: jthxml

# aiida code plugins
# these are plugins and their codes, which are both available on conda-forge
aiida_conda_code_computer: local_direct_conda  # the computer to use, by label
aiida_conda_code_plugins:

- plugin_package: aiida-abinit
  plugin_version: "0.2.0a1"
  conda_env: "abinit"
  code_packages:
  # - aiida-abinit.code=0.2.0a1  # TODO
  - abinit=9
  doc_packages: abinit
  codes:
  - label: abinit.main
    plugin: abinit
    exec: abinit

- plugin_package: aiida-cp2k
  plugin_version: "1.5.0"
  conda_env: "cp2k"
  code_packages:
  # - aiida-cp2k.code=1.5.0  # TODO
  - "cp2k=7.*=*openmpi*"  # ensure the mpi version is installed
  doc_packages: cp2k
  codes:
  - label: cp2k.main
    plugin: cp2k
    exec: cp2k.psmp

- plugin_package: aiida-fleur
  plugin_version: "1.3.1"
  conda_env: "fleur"
  code_packages:
  - aiida-fleur.code=1.3.1
  doc_packages: fleur
  codes:
  - label: fleur.main
    plugin: fleur.fleur
    exec: fleur_MPI
  - label: fleur.inpgen
    plugin: fleur.inpgen
    exec: inpgen

- plugin_package: aiida-nwchem
  plugin_version: "2.1.0"
  conda_env: "nwchem"
  code_packages:
  - aiida-nwchem.code=2.1.0
  doc_packages: nwchem
  codes:
  - label: nwchem.main
    plugin: nwchem.nwchem
    exec: nwchem

- plugin_package: aiida-quantumespresso
  plugin_version: "3.5.2"
  conda_env: "qe"
  code_packages:
  - aiida-quantumespresso.code=3.5.2
  doc_packages: qe
  codes:
  - label: qe.cp
    plugin: quantumespresso.cp
    exec: cp.x
  - label: qe.neb
    plugin: quantumespresso.neb
    exec: neb.x
  - label: qe.ph
    plugin: quantumespresso.ph
    exec: ph.x
  - label: qe.pp
    plugin: quantumespresso.pp
    exec: pp.x
  - label: qe.pw
    plugin: quantumespresso.pw
    exec: pw.x

- plugin_package: aiida-siesta
  plugin_version: "1.3.0"
  conda_env: "siesta"
  code_packages:
  - aiida-siesta.code=1.3.0
  - siesta=*=mpi*  # ensure the mpi version is installed
  doc_packages: siesta
  codes:
  - label: siesta.main
    plugin: siesta.siesta
    exec: siesta

- plugin_package: aiida-wannier90
  plugin_version: "2.0.1"
  conda_env: "wannier90"
  code_packages:
  - aiida-wannier90.code=2.0.1
  doc_packages: wannier90
  codes:
  - label: wannier90.main
    plugin: wannier90.wannier90
    exec: wannier90.x

- plugin_package: aiida-yambo
  plugin_version: "1.3.0"
  conda_env: "yambo"
  code_packages:
  # - aiida-yambo.code=1.3.0  # TODO
  - yambo=5
  doc_packages: yambo
  codes:
  - label: yambo.main
    plugin: yambo.yambo
    exec: yambo
