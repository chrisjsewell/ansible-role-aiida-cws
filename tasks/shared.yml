# initialise the simulation environment

- name: ensure that {{ aiida_temp_folder }} directory exists
  ansible.builtin.file:
    path: "{{ aiida_temp_folder }}"
    state: directory

- name: Install shared apt packages
  become: true
  become_user: "{{ root_user }}"
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    name:
    - vim  # required for manual verdi code/computer setup
    - ssh  # required by MPI
    - git  # useful for cloning repositories
    - python3-pkg-resources  # required by the pip ansible module

- name: Set environmental variables
  # OMP_NUM_THREADS: https://github.com/marvel-nccr/quantum-mobile/issues/187
  # MAMBA_NO_BANNER: https://github.com/mamba-org/mamba/issues/587#issuecomment-762998474
  # set stack size to unlimited
  loop:
  # see: https://stackoverflow.com/questions/415403/whats-the-difference-between-bashrc-bash-profile-and-environment
  - "${HOME}/.profile"  # non-interactive shell
  - "${HOME}/.bashrc"  # interactive shell
  ansible.builtin.blockinfile:
    path: "{{ item }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (aiida_cws/env)"
    block: |
      export OMP_NUM_THREADS=1
      export MAMBA_NO_BANNER=1
      ulimit -s unlimited

- name: Fix for running aiida processes on root
  # get `mesg: ttyname failed: Inappropriate ioctl for device` when running aiida processes on root
  # see: https://superuser.com/a/1277604
  when: current_user == root_user
  become: true
  become_user: "{{ root_user }}"
  ansible.builtin.replace:
    path: "${HOME}/.profile"
    regexp: "^mesg n"
    replace: "test -t 0 && mesg n"

- name: Fix for running openmpi on root
  # see: https://github.com/open-mpi/ompi/pull/5597/files
  # note: could use `--allow-run-on-root` in the mpirun command, but this is not supported by mpich
  # important running as root should only be done in a container
  when: current_user == root_user
  become: true
  become_user: "{{ root_user }}"
  ansible.builtin.blockinfile:
    path: "${HOME}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (aiida_cws/root)"
    block: |
      export OMPI_ALLOW_RUN_AS_ROOT=1
      export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
