# Create an aiida computer, from `aiida_computer`` dict

- name: "check if the AiiDA computer is already present: {{ aiida_computer.label }}"
  shell: "{{ aiida_run_verdi }} computer show {{ aiida_computer.label }}"
  ignore_errors: true
  no_log: true
  changed_when: false
  register: aiida_check_computer

- name: "create the AiiDA computer: {{ aiida_computer.label }}"
  when: aiida_check_computer.rc != 0
  block:

  - name: "Copy the configuration for the {{ aiida_computer.label }} AiiDA computer"
    template:
      src: "aiida-computer.yml"
      dest: "{{ aiida_data_folder_user }}/{{ aiida_computer.label }}.yml"
      mode: 0755
    vars:
      _aiida_computer_work_dir: "{{ aiida_computer.run_folder |  regex_replace('\\$\\{HOME}', current_user_home) }}"
      _aiida_computer_label: "{{ aiida_computer.label }}"
      _aiida_computer_hostname: "{{ aiida_computer.hostname }}"
      _aiida_computer_transport: "{{ aiida_computer.transport }}"
      _aiida_computer_scheduler: "{{ aiida_computer.scheduler }}"
      _aiida_computer_mpirun: "{{ aiida_computer.mpi_cmd }}"
      _aiida_computer_default_mpiprocs: "{{ aiida_computer.default_mpiprocs }}"

  - name: "Setup {{ aiida_computer.label }} computer for AiiDA"
    shell: |
      {{ aiida_run_verdi }} computer setup \
        --non-interactive --config "{{ aiida_data_folder_user }}/{{ aiida_computer.label }}.yml"

  - name: "Configure {{ aiida_computer.label }}"
    shell: "{{ aiida_run_verdi }} computer configure {{ aiida_computer.transport }} {{ aiida_computer.label }} --non-interactive {{ aiida_computer.configure }}"
